<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>libsystem_malloc.dylib`mvm_deallocate_pages (5 samples, 0.74%)</title><rect x="15.3" y="197" width="8.7" height="15.0" fill="rgb(241,83,5)" rx="2" ry="2" />
<text  x="18.26" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`DYLD-STUB$$memcpy (1 samples, 0.15%)</title><rect x="95.9" y="197" width="1.8" height="15.0" fill="rgb(219,120,38)" rx="2" ry="2" />
<text  x="98.91" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::gauss_newton_routines::compute_residuals::h84a6a4ee6a5fba46 (19 samples, 2.82%)</title><rect x="728.9" y="197" width="33.3" height="15.0" fill="rgb(252,159,33)" rx="2" ry="2" />
<text  x="731.87" y="207.5" >so..</text>
</g>
<g >
<title>solve_one_pair`_$LT$image..buffer..ImageBuffer$LT$FromType$C$$u20$Container$GT$$u20$as$u20$image..buffer..ConvertBuffer$LT$image..buffer..ImageBuffer$LT$ToType$C$$u20$alloc..vec..Vec$LT$$LT$ToType$u20$as$u20$image..buffer..Pixel$GT$..Subpixel$GT$$GT$$GT$$GT$::convert::h31e8e4f03d6fa583 (1 samples, 0.15%)</title><rect x="24.0" y="197" width="1.8" height="15.0" fill="rgb(220,106,52)" rx="2" ry="2" />
<text  x="27.03" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`DYLD-STUB$$memcpy (1 samples, 0.15%)</title><rect x="672.8" y="197" width="1.7" height="15.0" fill="rgb(205,199,47)" rx="2" ry="2" />
<text  x="675.76" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`png::decoder::stream::StreamingDecoder::update::hd9448987b4ddf19b (34 samples, 5.05%)</title><rect x="25.8" y="117" width="59.6" height="15.0" fill="rgb(205,68,43)" rx="2" ry="2" />
<text  x="28.78" y="127.5" >solve_..</text>
</g>
<g >
<title>solve_one_pair`__rust_maybe_catch_panic (671 samples, 99.70%)</title><rect x="13.5" y="277" width="1176.5" height="15.0" fill="rgb(232,39,39)" rx="2" ry="2" />
<text  x="16.51" y="287.5" >solve_one_pair`__rust_maybe_catch_panic</text>
</g>
<g >
<title>solve_one_pair`inflate::DynHuffman16::read::heb951682ffcbf3c7 (13 samples, 1.93%)</title><rect x="62.6" y="69" width="22.8" height="15.0" fill="rgb(242,167,39)" rx="2" ry="2" />
<text  x="65.60" y="79.5" >s..</text>
</g>
<g >
<title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (4 samples, 0.59%)</title><rect x="651.7" y="165" width="7.0" height="15.0" fill="rgb(224,25,40)" rx="2" ry="2" />
<text  x="654.72" y="175.5" ></text>
</g>
<g >
<title>solve_one_pair`std::io::stdio::_print::h1ae77dfb25570ad5 (1 samples, 0.15%)</title><rect x="88.9" y="213" width="1.8" height="15.0" fill="rgb(218,179,2)" rx="2" ry="2" />
<text  x="91.90" y="223.5" ></text>
</g>
<g >
<title>solve_one_pair`std::io::Write::write_all::hc2766c9ca69aeaa3 (1 samples, 0.15%)</title><rect x="88.9" y="149" width="1.8" height="15.0" fill="rgb(238,153,42)" rx="2" ry="2" />
<text  x="91.90" y="159.5" ></text>
</g>
<g >
<title>solve_one_pair`std::panicking::try::do_call::h20c95c457c762d5f (671 samples, 99.70%)</title><rect x="13.5" y="261" width="1176.5" height="15.0" fill="rgb(246,56,33)" rx="2" ry="2" />
<text  x="16.51" y="271.5" >solve_one_pair`std::panicking::try::do_call::h20c95c457c762d5f</text>
</g>
<g >
<title>solve_one_pair`_$LT$png..decoder..Reader$LT$R$GT$$GT$::next_interlaced_row::h1df06b722a367186 (35 samples, 5.20%)</title><rect x="25.8" y="165" width="61.3" height="15.0" fill="rgb(228,93,19)" rx="2" ry="2" />
<text  x="28.78" y="175.5" >solve_..</text>
</g>
<g >
<title>solve_one_pair`_$LT$image..buffer..ImageBuffer$LT$P$C$$u20$Container$GT$$GT$::get_pixel::hdcded7cef4baee8c (12 samples, 1.78%)</title><rect x="343.1" y="181" width="21.1" height="15.0" fill="rgb(238,187,9)" rx="2" ry="2" />
<text  x="346.14" y="191.5" ></text>
</g>
<g >
<title>solve_one_pair`_$LT$std..io..Write..write_fmt..Adaptor$LT$$u27$_$C$$u20$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::h31217bf1102c97df (1 samples, 0.15%)</title><rect x="88.9" y="165" width="1.8" height="15.0" fill="rgb(220,164,29)" rx="2" ry="2" />
<text  x="91.90" y="175.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::jacobians::lie_jacobians::hf989b30a6706bed3 (98 samples, 14.56%)</title><rect x="1004.1" y="197" width="171.9" height="15.0" fill="rgb(208,110,42)" rx="2" ry="2" />
<text  x="1007.15" y="207.5" >solve_one_pair`visual_..</text>
</g>
<g >
<title>all (673 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(214,25,50)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`mvm_deallocate_pages (4 samples, 0.59%)</title><rect x="651.7" y="181" width="7.0" height="15.0" fill="rgb(213,94,11)" rx="2" ry="2" />
<text  x="654.72" y="191.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.15%)</title><rect x="423.8" y="37" width="1.7" height="15.0" fill="rgb(253,179,32)" rx="2" ry="2" />
<text  x="426.79" y="47.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::camera::Camera::back_project_pixel::haa19ea549eb92caf (4 samples, 0.59%)</title><rect x="721.9" y="181" width="7.0" height="15.0" fill="rgb(231,46,30)" rx="2" ry="2" />
<text  x="724.86" y="191.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::gauss_newton_routines::gauss_newton_step::h655793ccd5c0d6bc (138 samples, 20.51%)</title><rect x="762.2" y="197" width="241.9" height="15.0" fill="rgb(245,28,50)" rx="2" ry="2" />
<text  x="765.18" y="207.5" >solve_one_pair`visual_odometry::..</text>
</g>
<g >
<title>solve_one_pair`image::dynimage::DynamicImage::to_luma::h11fb9665674b6761 (1 samples, 0.15%)</title><rect x="24.0" y="213" width="1.8" height="15.0" fill="rgb(238,87,0)" rx="2" ry="2" />
<text  x="27.03" y="223.5" ></text>
</g>
<g >
<title>solve_one_pair`solve_one_pair::main::h9d54e42a6c78a2d3 (671 samples, 99.70%)</title><rect x="13.5" y="229" width="1176.5" height="15.0" fill="rgb(228,25,25)" rx="2" ry="2" />
<text  x="16.51" y="239.5" >solve_one_pair`solve_one_pair::main::h9d54e42a6c78a2d3</text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (50 samples, 7.43%)</title><rect x="916.5" y="181" width="87.6" height="15.0" fill="rgb(228,15,43)" rx="2" ry="2" />
<text  x="919.48" y="191.5" >libsystem_..</text>
</g>
<g >
<title>solve_one_pair`_$LT$std..io..stdio..Stdout$u20$as$u20$std..io..Write$GT$::write_fmt::he1fd12df17a3ee6f (1 samples, 0.15%)</title><rect x="88.9" y="197" width="1.8" height="15.0" fill="rgb(229,34,40)" rx="2" ry="2" />
<text  x="91.90" y="207.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`madvise (17 samples, 2.53%)</title><rect x="620.2" y="197" width="29.8" height="15.0" fill="rgb(222,222,11)" rx="2" ry="2" />
<text  x="623.16" y="207.5" >li..</text>
</g>
<g >
<title>solve_one_pair`alloc::vec::from_elem::h68879c4c89e2ed3b (1 samples, 0.15%)</title><rect x="674.5" y="197" width="1.8" height="15.0" fill="rgb(217,95,36)" rx="2" ry="2" />
<text  x="677.52" y="207.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`mvm_deallocate_pages (2 samples, 0.30%)</title><rect x="676.3" y="165" width="3.5" height="15.0" fill="rgb(220,20,45)" rx="2" ry="2" />
<text  x="679.27" y="175.5" ></text>
</g>
<g >
<title>solve_one_pair`0x1 (673 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(209,101,5)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >solve_one_pair`0x1</text>
</g>
<g >
<title>solve_one_pair`_$LT$image..buffer..ImageBuffer$LT$P$C$$u20$Container$GT$$GT$::get_pixel_mut::hc005a77b937b5c07 (1 samples, 0.15%)</title><rect x="97.7" y="197" width="1.7" height="15.0" fill="rgb(218,173,25)" rx="2" ry="2" />
<text  x="100.67" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`std::rt::lang_start_internal::he82d111f45e8971a (671 samples, 99.70%)</title><rect x="13.5" y="293" width="1176.5" height="15.0" fill="rgb(241,220,12)" rx="2" ry="2" />
<text  x="16.51" y="303.5" >solve_one_pair`std::rt::lang_start_internal::he82d111f45e8971a</text>
</g>
<g >
<title>libsystem_malloc.dylib`realloc (1 samples, 0.15%)</title><rect x="423.8" y="85" width="1.7" height="15.0" fill="rgb(238,123,46)" rx="2" ry="2" />
<text  x="426.79" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free_large (4 samples, 0.59%)</title><rect x="651.7" y="197" width="7.0" height="15.0" fill="rgb(210,201,45)" rx="2" ry="2" />
<text  x="654.72" y="207.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 3.42%)</title><rect x="1067.3" y="181" width="40.3" height="15.0" fill="rgb(246,45,46)" rx="2" ry="2" />
<text  x="1070.27" y="191.5" >lib..</text>
</g>
<g >
<title>solve_one_pair`visual_odometry::image::Image::from_vec_16::hf6edfac427199499 (4 samples, 0.59%)</title><rect x="397.5" y="213" width="7.0" height="15.0" fill="rgb(244,50,22)" rx="2" ry="2" />
<text  x="400.49" y="223.5" ></text>
</g>
<g >
<title>solve_one_pair`_$LT$png..decoder..ReadDecoder$LT$R$GT$$GT$::decode_next::h4578d971375a7204 (34 samples, 5.05%)</title><rect x="25.8" y="133" width="59.6" height="15.0" fill="rgb(220,7,40)" rx="2" ry="2" />
<text  x="28.78" y="143.5" >solve_..</text>
</g>
<g >
<title>solve_one_pair`core::slice::_$LT$impl$u20$$u5b$T$u5d$$GT$::copy_from_slice::h849be941824774e6 (7 samples, 1.04%)</title><rect x="365.9" y="181" width="12.3" height="15.0" fill="rgb(218,51,2)" rx="2" ry="2" />
<text  x="368.93" y="191.5" ></text>
</g>
<g >
<title>solve_one_pair`png::decoder::stream::StreamingDecoder::update::hd9448987b4ddf19b (18 samples, 2.67%)</title><rect x="406.3" y="149" width="31.5" height="15.0" fill="rgb(253,58,19)" rx="2" ry="2" />
<text  x="409.26" y="159.5" >so..</text>
</g>
<g >
<title>libsystem_m.dylib`0x00007fff5bd49958 (1 samples, 0.15%)</title><rect x="650.0" y="197" width="1.7" height="15.0" fill="rgb(223,127,43)" rx="2" ry="2" />
<text  x="652.97" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`_$LT$image..png..PNGDecoder$LT$R$GT$$u20$as$u20$image..image..ImageDecoder$GT$::read_image::h99295524c90726fc (36 samples, 5.35%)</title><rect x="25.8" y="197" width="63.1" height="15.0" fill="rgb(252,158,18)" rx="2" ry="2" />
<text  x="28.78" y="207.5" >solve_..</text>
</g>
<g >
<title>solve_one_pair`inflate::InflateStream::update::h9e5b9694f156fc4a (18 samples, 2.67%)</title><rect x="406.3" y="133" width="31.5" height="15.0" fill="rgb(217,18,41)" rx="2" ry="2" />
<text  x="409.26" y="143.5" >so..</text>
</g>
<g >
<title>solve_one_pair`image::imageops::sample::filter3x3::hb580b9fd6e158047 (155 samples, 23.03%)</title><rect x="106.4" y="197" width="271.8" height="15.0" fill="rgb(242,158,16)" rx="2" ry="2" />
<text  x="109.43" y="207.5" >solve_one_pair`image::imageops::samp..</text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 1.19%)</title><rect x="658.7" y="197" width="14.1" height="15.0" fill="rgb(227,79,28)" rx="2" ry="2" />
<text  x="661.74" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`inflate::InflateStream::next_state::hc20ae8b7ffdfe7e9 (29 samples, 4.31%)</title><rect x="34.5" y="85" width="50.9" height="15.0" fill="rgb(218,170,0)" rx="2" ry="2" />
<text  x="37.55" y="95.5" >solve..</text>
</g>
<g >
<title>solve_one_pair`image::dynimage::open_impl::h35a13de81d481212 (36 samples, 5.35%)</title><rect x="25.8" y="213" width="63.1" height="15.0" fill="rgb(218,223,2)" rx="2" ry="2" />
<text  x="28.78" y="223.5" >solve_..</text>
</g>
<g >
<title>libsystem_malloc.dylib`free_large (5 samples, 0.74%)</title><rect x="15.3" y="213" width="8.7" height="15.0" fill="rgb(221,190,41)" rx="2" ry="2" />
<text  x="18.26" y="223.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`madvise (4 samples, 0.59%)</title><rect x="1060.3" y="181" width="7.0" height="15.0" fill="rgb(238,222,47)" rx="2" ry="2" />
<text  x="1063.25" y="191.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::jacobians::stack_columns::h84049fcba9bffde1 (30 samples, 4.46%)</title><rect x="1123.4" y="181" width="52.6" height="15.0" fill="rgb(229,98,53)" rx="2" ry="2" />
<text  x="1126.37" y="191.5" >solve..</text>
</g>
<g >
<title>solve_one_pair`inflate::InflateStream::update::h9e5b9694f156fc4a (30 samples, 4.46%)</title><rect x="32.8" y="101" width="52.6" height="15.0" fill="rgb(214,61,23)" rx="2" ry="2" />
<text  x="35.79" y="111.5" >solve..</text>
</g>
<g >
<title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (5 samples, 0.74%)</title><rect x="15.3" y="181" width="8.7" height="15.0" fill="rgb(227,137,22)" rx="2" ry="2" />
<text  x="18.26" y="191.5" ></text>
</g>
<g >
<title>solve_one_pair`_$LT$image..buffer..ImageBuffer$LT$P$C$$u20$Container$GT$$GT$::get_pixel_mut::hc005a77b937b5c07 (1 samples, 0.15%)</title><rect x="364.2" y="181" width="1.7" height="15.0" fill="rgb(226,212,30)" rx="2" ry="2" />
<text  x="367.18" y="191.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.15%)</title><rect x="423.8" y="53" width="1.7" height="15.0" fill="rgb(253,88,36)" rx="2" ry="2" />
<text  x="426.79" y="63.5" ></text>
</g>
<g >
<title>solve_one_pair`adler32::RollingAdler32::update_buffer::hd05d118a9c1812e5 (1 samples, 0.15%)</title><rect x="32.8" y="85" width="1.7" height="15.0" fill="rgb(237,175,24)" rx="2" ry="2" />
<text  x="35.79" y="95.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.45%)</title><rect x="90.7" y="197" width="5.2" height="15.0" fill="rgb(217,51,28)" rx="2" ry="2" />
<text  x="93.65" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`inflate::InflateStream::next_state::hc20ae8b7ffdfe7e9 (16 samples, 2.38%)</title><rect x="409.8" y="117" width="28.0" height="15.0" fill="rgb(207,70,24)" rx="2" ry="2" />
<text  x="412.76" y="127.5" >s..</text>
</g>
<g >
<title>solve_one_pair`inflate::DynHuffman16::new::h592f9e289d0b1638 (2 samples, 0.30%)</title><rect x="422.0" y="101" width="3.5" height="15.0" fill="rgb(210,93,47)" rx="2" ry="2" />
<text  x="425.04" y="111.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::gauss_newton_routines::back_project::h6b0e250baa602266 (13 samples, 1.93%)</title><rect x="706.1" y="197" width="22.8" height="15.0" fill="rgb(253,215,0)" rx="2" ry="2" />
<text  x="709.08" y="207.5" >s..</text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.15%)</title><rect x="423.8" y="69" width="1.7" height="15.0" fill="rgb(231,21,16)" rx="2" ry="2" />
<text  x="426.79" y="79.5" ></text>
</g>
<g >
<title>solve_one_pair`_$LT$png..decoder..Reader$LT$R$GT$$GT$::next_frame::h1ed1c8d585112bd6 (20 samples, 2.97%)</title><rect x="406.3" y="197" width="35.0" height="15.0" fill="rgb(207,227,52)" rx="2" ry="2" />
<text  x="409.26" y="207.5" >so..</text>
</g>
<g >
<title>libsystem_malloc.dylib`free_small (1 samples, 0.15%)</title><rect x="87.1" y="165" width="1.8" height="15.0" fill="rgb(230,96,31)" rx="2" ry="2" />
<text  x="90.15" y="175.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::camera::Camera::apply_perspective_projection::he256ae074b0a3ec4 (15 samples, 2.23%)</title><rect x="679.8" y="197" width="26.3" height="15.0" fill="rgb(233,132,23)" rx="2" ry="2" />
<text  x="682.78" y="207.5" >s..</text>
</g>
<g >
<title>solve_one_pair`core::slice::_$LT$impl$u20$$u5b$T$u5d$$GT$::copy_from_slice::h849be941824774e6 (4 samples, 0.59%)</title><rect x="99.4" y="197" width="7.0" height="15.0" fill="rgb(248,188,3)" rx="2" ry="2" />
<text  x="102.42" y="207.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 2.53%)</title><rect x="313.3" y="181" width="29.8" height="15.0" fill="rgb(222,181,26)" rx="2" ry="2" />
<text  x="316.33" y="191.5" >li..</text>
</g>
<g >
<title>libsystem_kernel.dylib`write (1 samples, 0.15%)</title><rect x="88.9" y="117" width="1.8" height="15.0" fill="rgb(219,22,36)" rx="2" ry="2" />
<text  x="91.90" y="127.5" ></text>
</g>
<g >
<title>solve_one_pair`adler32::RollingAdler32::update_buffer::hd05d118a9c1812e5 (2 samples, 0.30%)</title><rect x="406.3" y="117" width="3.5" height="15.0" fill="rgb(252,49,52)" rx="2" ry="2" />
<text  x="409.26" y="127.5" ></text>
</g>
<g >
<title>solve_one_pair`core::ptr::real_drop_in_place::heb93402fa2bab6b5 (2 samples, 0.30%)</title><rect x="676.3" y="197" width="3.5" height="15.0" fill="rgb(217,89,7)" rx="2" ry="2" />
<text  x="679.27" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`inflate::DynHuffman16::read::heb951682ffcbf3c7 (7 samples, 1.04%)</title><rect x="425.5" y="101" width="12.3" height="15.0" fill="rgb(224,129,22)" rx="2" ry="2" />
<text  x="428.54" y="111.5" ></text>
</g>
<g >
<title>solve_one_pair`main (671 samples, 99.70%)</title><rect x="13.5" y="309" width="1176.5" height="15.0" fill="rgb(229,36,29)" rx="2" ry="2" />
<text  x="16.51" y="319.5" >solve_one_pair`main</text>
</g>
<g >
<title>solve_one_pair`_$LT$png..decoder..Reader$LT$R$GT$$GT$::next_raw_interlaced_row::hf0d170eccb764785 (20 samples, 2.97%)</title><rect x="406.3" y="181" width="35.0" height="15.0" fill="rgb(218,188,27)" rx="2" ry="2" />
<text  x="409.26" y="191.5" >so..</text>
</g>
<g >
<title>solve_one_pair`_$LT$png..decoder..Reader$LT$R$GT$$GT$::next_raw_interlaced_row::h676b6c7a3f9ca363 (35 samples, 5.20%)</title><rect x="25.8" y="149" width="61.3" height="15.0" fill="rgb(230,141,29)" rx="2" ry="2" />
<text  x="28.78" y="159.5" >solve_..</text>
</g>
<g >
<title>solve_one_pair`visual_odometry::numerics::z_standardize::h1b2c21f042bec495 (2 samples, 0.30%)</title><rect x="394.0" y="197" width="3.5" height="15.0" fill="rgb(213,70,21)" rx="2" ry="2" />
<text  x="396.98" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`nalgebra::base::ops::_$LT$impl$u20$core..ops..arith..Mul$LT$$RF$$u27$b$u20$nalgebra..base..matrix..Matrix$LT$N$C$$u20$R2$C$$u20$C2$C$$u20$SB$GT$$GT$$u20$for$u20$nalgebra..base..matrix..Matrix$LT$N$C$$u20$R1$C$$u20$C1$C$$u20$SA$GT$$GT$::mul::hed3a2f5dce2ad76f (9 samples, 1.34%)</title><rect x="1107.6" y="181" width="15.8" height="15.0" fill="rgb(207,157,36)" rx="2" ry="2" />
<text  x="1110.59" y="191.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::solve::h56218ea05697eef2 (427 samples, 63.45%)</title><rect x="441.3" y="213" width="748.7" height="15.0" fill="rgb(250,27,18)" rx="2" ry="2" />
<text  x="444.32" y="223.5" >solve_one_pair`visual_odometry::solve::h56218ea05697eef2</text>
</g>
<g >
<title>solve_one_pair`_$LT$png..decoder..ReadDecoder$LT$R$GT$$GT$::decode_next::hcd8a33769543b7e6 (18 samples, 2.67%)</title><rect x="406.3" y="165" width="31.5" height="15.0" fill="rgb(227,208,22)" rx="2" ry="2" />
<text  x="409.26" y="175.5" >so..</text>
</g>
<g >
<title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (2 samples, 0.30%)</title><rect x="676.3" y="149" width="3.5" height="15.0" fill="rgb(251,49,29)" rx="2" ry="2" />
<text  x="679.27" y="159.5" ></text>
</g>
<g >
<title>solve_one_pair`core::ptr::real_drop_in_place::hccb5ed7fb1de75fd (1 samples, 0.15%)</title><rect x="87.1" y="181" width="1.8" height="15.0" fill="rgb(235,151,4)" rx="2" ry="2" />
<text  x="90.15" y="191.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::jacobians::perspective_jacobians::hed4524d6fe2a316e (8 samples, 1.19%)</title><rect x="1176.0" y="197" width="14.0" height="15.0" fill="rgb(243,209,11)" rx="2" ry="2" />
<text  x="1178.97" y="207.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.15%)</title><rect x="404.5" y="197" width="1.8" height="15.0" fill="rgb(225,141,6)" rx="2" ry="2" />
<text  x="407.50" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`_$LT$png..decoder..Reader$LT$R$GT$$GT$::next_frame::h8fcef40c9cae7d05 (35 samples, 5.20%)</title><rect x="25.8" y="181" width="61.3" height="15.0" fill="rgb(230,34,25)" rx="2" ry="2" />
<text  x="28.78" y="191.5" >solve_..</text>
</g>
<g >
<title>solve_one_pair`_$LT$std..io..stdio..StdoutLock$LT$$u27$_$GT$$u20$as$u20$std..io..Write$GT$::write::h7f73ff2766e1c816 (1 samples, 0.15%)</title><rect x="88.9" y="133" width="1.8" height="15.0" fill="rgb(236,31,38)" rx="2" ry="2" />
<text  x="91.90" y="143.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`__exit (2 samples, 0.30%)</title><rect x="10.0" y="309" width="3.5" height="15.0" fill="rgb(254,68,13)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::io::read_png_16bits_row_major::hde6c5a2288a9bc63 (21 samples, 3.12%)</title><rect x="404.5" y="213" width="36.8" height="15.0" fill="rgb(224,89,15)" rx="2" ry="2" />
<text  x="407.50" y="223.5" >sol..</text>
</g>
<g >
<title>solve_one_pair`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hab3f1a08290bb369 (671 samples, 99.70%)</title><rect x="13.5" y="245" width="1176.5" height="15.0" fill="rgb(253,16,22)" rx="2" ry="2" />
<text  x="16.51" y="255.5" >solve_one_pair`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hab3f1a08290bb369</text>
</g>
<g >
<title>solve_one_pair`png::filter::unfilter::h098bf4fd139c9c88 (1 samples, 0.15%)</title><rect x="85.4" y="133" width="1.7" height="15.0" fill="rgb(212,110,31)" rx="2" ry="2" />
<text  x="88.39" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free_large (2 samples, 0.30%)</title><rect x="676.3" y="181" width="3.5" height="15.0" fill="rgb(211,123,2)" rx="2" ry="2" />
<text  x="679.27" y="191.5" ></text>
</g>
<g >
<title>libdyld.dylib`start (673 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(239,213,6)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >libdyld.dylib`start</text>
</g>
<g >
<title>solve_one_pair`core::fmt::write::hbe8b9e0d6296c582 (1 samples, 0.15%)</title><rect x="88.9" y="181" width="1.8" height="15.0" fill="rgb(235,100,51)" rx="2" ry="2" />
<text  x="91.90" y="191.5" ></text>
</g>
<g >
<title>solve_one_pair`png::filter::unfilter::h098bf4fd139c9c88 (2 samples, 0.30%)</title><rect x="437.8" y="165" width="3.5" height="15.0" fill="rgb(214,197,35)" rx="2" ry="2" />
<text  x="440.82" y="175.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::image::image_to_matrix::hd78df842e2ef3818 (9 samples, 1.34%)</title><rect x="378.2" y="197" width="15.8" height="15.0" fill="rgb(206,69,31)" rx="2" ry="2" />
<text  x="381.20" y="207.5" ></text>
</g>
<g >
<title>solve_one_pair`visual_odometry::image::Image::from_image::hc9c39ff8b75b8f2d (175 samples, 26.00%)</title><rect x="90.7" y="213" width="306.8" height="15.0" fill="rgb(226,164,35)" rx="2" ry="2" />
<text  x="93.65" y="223.5" >solve_one_pair`visual_odometry::image::Im..</text>
</g>
</g>
</svg>
